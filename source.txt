### Controls ####
# play (play or p)
# pause or stop
# mute (m, mute or unmute - can just use m, it will toggle for you)
# next (n, next or >)
# prev (pr, prev, previous or <)
# quit (e, q, quit, end, kill or exit)
# start (s, start or init)
# now (i, now or current)
# artist
# album
# song (t, track, name or song)
# duration (d, duration or time)
# 50 (set volume to number specified)
# url
################################
# Play/Pause Example: rdio (or p, play, pause, stop)
# Next Track: rdio n (or next or >)
# Previous Track: rdio pr (or prev or previous or <)
# Change Volume: rdio 30
# Mute: rdio m (or mute or unmute)
# Unmute: rdio m (or mute or unmute)
# Start App: rdio s (or start or init)
# Kill App: rdio q (or e, quit, end, exit or kill)
# Current: rdio i (or now or current)
# Artist: rdio artist
# Album: rdio album
# Track: rdio t (or track or name or song)
# Duration: rdio d (or duration or tim)
# URL: rdio url
### END ####

on sendMsg(t, d, art)
	
	tell application "System Events"
		set isRunning to (count of (every process whose bundle identifier is "com.Growl.GrowlHelperApp")) > 0
	end tell
	
	if isRunning then
		tell application id "com.Growl.GrowlHelperApp"
			set the allNotificationsList to {"Rdio"}
			set the enabledNotificationsList to {"Rdio"}
			
			register as application "Rdio" all notifications allNotificationsList default notifications enabledNotificationsList icon of application "Rdio"
			
			if art is missing value then
				notify with name "Rdio" title t description d application name "Rdio" icon of application "Rdio"
			else
				notify with name "Rdio" title t description d application name "Rdio" image art
			end if
			
		end tell
	end if
	
end sendMsg

to calcTime(t)
	set m to (t div 60 as string)
	set s to t mod 60
	
	if s is less than 10 then
		set s to "0" & (s as string)
	else
		set s to (s as string)
	end if
	
	return m & ":" & s
end calcTime

on alfred_script(q)
	
	set notify_title to ""
	set notify_desc to ""
	set notify_art to ""
	
	set n to {"n", "next", ">"}
	set p to {"p", "play", "pause", "stop", ""}
	set pr to {"pr", "prev", "previous", "<"}
	set s to {"s", "start", "init"}
	set e to {"e", "q", "quit", "kill", "end", "exit"}
	set m to {"m", "mute", "unmute"}
	set i to {"i", "now", "current"}
	set t to {"t", "track", "name", "song"}
	set d to {"d", "duration", "time"}
	set h to {"h", "help"}
	
	tell application "Rdio"
		try
			set notify_art to artwork of current track
		on error
			set notify_art to ""
		end try
		
		if q is in p or q is missing value then
			playpause
			
		else if q is in pr then
			previous track
			
		else if q is in n then
			next track
			
		else if q is in s then
			activate
			
		else if q is in e then
			quit
			
		else if q is in m then
			if sound volume is less than or equal to 0 then
				set sound volume to 100
			else
				set sound volume to 0
			end if
			
		else if q is in i then
			set notify_art to artwork of current track
			set notify_name to "Track Information"
			set notify_title to "Now Playing"
			set notify_desc to name of current track & " (" & my calcTime(duration of current track) & ")" & "
" & artist of current track & "
" & album of current track
			
		else if q is equal to "artist" then
			set notify_title to "Artist Name"
			set notify_desc to artist of current track
			
		else if q is equal to "album" then
			set notify_title to "Album Name"
			set notify_desc to album of current track
			
		else if q is in d then
			set notify_title to "Duration"
			set notify_desc to my calcTime(duration of current track)
			
		else if q is in t then
			set notify_title to "Track Name"
			set notify_desc to name of current track
			
		else if q is equal to "url" then
			set notify_title to "Rdio URL"
			set notify_desc to rdio url of current track
			
		else if q is in h then
			set notify_title to "Rdio Controls Help"
			set notify_desc to "Play/Pause: rdio (or p, play, pause, stop)
Next Track: rdio n (or next or >) 
Previous Track: rdio pr (or prev or previous or <)
Change Volume: rdio 30
Mute: rdio m (or mute or unmute)
Unmute: rdio m (or mute or unmute) 
Start App: rdio s (or start or init) 
Kill App: rdio q (or e, quit, end, exit or kill) 
Current: rdio i (or now or current) 
Artist: rdio artist 
Album: rdio album 
Track: rdio t (or track or name or song) 
Duration: rdio d (or duration or tim) 
URL: rdio url "
			
		else
			try
				(q as number) div 1
				set sound volume to q
			on error
				set notify_title to "Invalid Argument"
				set notify_desc to "The option '" & q & "' is invalid."
			end try
		end if
	end tell
	
	if notify_desc is not equal to "" then
		set the clipboard to notify_desc as text
		sendMsg(notify_title, notify_desc, notify_art)
	end if
end alfred_script